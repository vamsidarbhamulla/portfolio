{"version":3,"sources":["components/Header.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","className","id","title","Component","About","profilePic","image","bio","state","phone","email","resumeDownload","src","alt","Footer","App","foo","resumeData","axios","get","response","console","log","setState","getResumeData","main","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1133a1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n\n        if (this.props.data) {\n            var name = this.props.data.name;\n            var occupation = this.props.data.occupation;\n            var description = this.props.data.description;\n            var city = this.props.data.address.city;\n            var networks = this.props.data.social.map(function(network) {\n                return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n            });\n        }\n\n        return (\n            <header id=\"home\">\n\n            <nav id=\"nav-wrap\">\n\n                <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n                <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n                <ul id=\"nav\" className=\"nav\">\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#works\">Works</a></li>\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n                </ul>\n\n            </nav>\n\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                    <h1 className=\"response-headline\">I'm {name}.</h1>\n                    <h3>I'm a {city} based <span>{occupation}</span>. {description} </h3>\n                    <hr />\n                    <ul className=\"social\">\n                        {networks}\n                    </ul>\n                </div>\n            </div>\n\n            <p className=\"scrolldown\">\n                <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n            </p>\n\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n\n        if(this.props.data) {\n            var name = this.props.data.name;\n            var profilePic = \"images/\" + this.props.data.image;\n            var bio = this.props.data.bio;\n            var city = this.props.data.address.city;\n            var state = this.props.data.address.state;\n            var phone = this.props.data.phone;\n            var email = this.props.data.email;\n            var resumeDownload = this.props.data.resumeDownload;\n        }\n\n        return (\n            <section id=\"about\">\n                <div className=\"row\">\n                    <div className=\"three columns\">\n                        <img className=\"profile-pic\" src={profilePic} alt=\"Vamsi Profile Pic\" />\n                    </div>\n                    <div className=\"nine columns main-col\">\n                        <h2>About Me</h2>\n\n                        <p>{bio}</p>\n                        <div className=\"row\">\n                            <div className=\"columns contact-details\">\n                                <h2>Contact Details</h2>\n                                <p className=\"address\">\n                                    <span>{name}</span><br />\n                                    <span> {city} {state} </span><br />\n                                    <span>{phone}</span><br />\n                                    <span>{email}</span><br />\n                                </p>\n                            </div>\n                            <div className=\"columns download\">\n                                <p>\n                                    <a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i></a>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        \n        if(this.props.data) {\n            var networks = this.props.data.social.map(function(network){\n                return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n            });\n        }\n    \n\n        return (\n            <footer>\n\n                <div className=\"row\">\n                    <div className=\"twelve columns\">\n                        <ul className=\"social-links\">\n                            {networks}\n                        </ul>\n\n                        <ul className=\"copyright\">\n                            <li>&copy; Copyright 2019 Bodhivruksha cloud inc</li>\n                            <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n                        </ul>\n                    </div>\n                </div>\n                <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport axios from 'axios';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n  }\n\n  async getResumeData() {\n    try{\n      const response = await axios.get('resumeData.json');\n      console.log('data is' + response.data);\n      this.setState({resumeData: response.data});\n    } catch(error){\n      console.log(\"cannot get resume data from json\");\n    }\n  }\n\n  componentDidMount() {\n    console.log('inside did mount');\n    this.getResumeData();\n    console.log('after did mount');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}