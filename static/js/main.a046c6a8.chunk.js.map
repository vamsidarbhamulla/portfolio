{"version":3,"sources":["components/Header.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","className","id","title","Component","About","profilePic","image","bio","state","phone","email","resumeDownload","src","alt","Footer","App","foo","resumeData","axios","get","response","console","log","setState","getResumeData","main","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a046c6a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n\r\n        if (this.props.data) {\r\n            var name = this.props.data.name;\r\n            var occupation = this.props.data.occupation;\r\n            var description = this.props.data.description;\r\n            var city = this.props.data.address.city;\r\n            var networks = this.props.data.social.map(function(network) {\r\n                return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\r\n            });\r\n        }\r\n\r\n        return (\r\n            <header id=\"home\">\r\n\r\n            <nav id=\"nav-wrap\">\r\n\r\n                <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n                <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\r\n\r\n                <ul id=\"nav\" className=\"nav\">\r\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#works\">Works</a></li>\r\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n            <div className=\"row banner\">\r\n                <div className=\"banner-text\">\r\n                    <h1 className=\"response-headline\">I'm {name}.</h1>\r\n                    <h3>I'm a {city} based <span>{occupation}</span>. {description} </h3>\r\n                    <hr />\r\n                    <ul className=\"social\">\r\n                        {networks}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"scrolldown\">\r\n                <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n            </p>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n\r\n        if(this.props.data) {\r\n            var name = this.props.data.name;\r\n            var profilePic = \"images/\" + this.props.data.image;\r\n            var bio = this.props.data.bio;\r\n            var city = this.props.data.address.city;\r\n            var state = this.props.data.address.state;\r\n            var phone = this.props.data.phone;\r\n            var email = this.props.data.email;\r\n            var resumeDownload = this.props.data.resumeDownload;\r\n        }\r\n\r\n        return (\r\n            <section id=\"about\">\r\n                <div className=\"row\">\r\n                    <div className=\"three columns\">\r\n                        <img className=\"profile-pic\" src={profilePic} alt=\"Vamsi Profile Pic\" />\r\n                    </div>\r\n                    <div className=\"nine columns main-col\">\r\n                        <h2>About Me</h2>\r\n\r\n                        <p>{bio}</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"columns contact-details\">\r\n                                <h2>Contact Details</h2>\r\n                                <p className=\"address\">\r\n                                    <span>{name}</span><br />\r\n                                    <span> {city} {state} </span><br />\r\n                                    <span>{phone}</span><br />\r\n                                    <span>{email}</span><br />\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"columns download\">\r\n                                <p>\r\n                                    <a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i></a>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        \r\n        if(this.props.data) {\r\n            var networks = this.props.data.social.map(function(network){\r\n                return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\r\n            });\r\n        }\r\n    \r\n\r\n        return (\r\n            <footer>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"twelve columns\">\r\n                        <ul className=\"social-links\">\r\n                            {networks}\r\n                        </ul>\r\n\r\n                        <ul className=\"copyright\">\r\n                            <li>&copy; Copyright 2019 Bodhivruksha cloud inc</li>\r\n                            <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Footer from './components/Footer';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      foo: 'bar',\r\n      resumeData: {}\r\n    };\r\n  }\r\n\r\n  async getResumeData() {\r\n    try{\r\n      const response = await axios.get('resumeData.json');\r\n      console.log('data is' + response.data);\r\n      this.setState({resumeData: response.data});\r\n    } catch(error){\r\n      console.log(\"cannot get resume data from json\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('inside did mount');\r\n    this.getResumeData();\r\n    console.log('after did mount');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header data={this.state.resumeData.main} />\r\n        <About data={this.state.resumeData.main} />\r\n        <Footer data={this.state.resumeData.main} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}